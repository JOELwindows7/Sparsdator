# This is a basic workflow to help you get started with Actions
# And also a Template for all manufacturing belts

# Template designed by: Admiral Zumi with help of Kaorfa JOELwindows7

name: Template Manufacturing Belt

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  # Make every manufacturing belts runs this type of workflow every single month on day one
  schedule:
  - cron: "0 0 1 * *"

env:
  UPDATE: ~/work/Sparsdator/Sparsdator/ShellScripts/setup_and_update.sh

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # (IMPORTANT) Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # (IMPORTANT) Prepare SparsdatField Folder!
      - name: Prepare Manufacturing Tray
        run: |
          mkdir -p ~/SparsdatField
          pwd ~
          ls ~
      
      # (IMPORTANT) Update Everything & setup another stuffs matter
      - name: Update everything pls! Setup Essentials too!
        run: |
          ls
          pwd
          chmod +x ~/work/Sparsdator/Sparsdator/ShellScripts/setup_and_update.sh
          ~/work/Sparsdator/Sparsdator/ShellScripts/setup_and_update.sh

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      
      # Test something to do right here. maybe add file then insert something?
      - name: Test Touch & Penetrate
        run: |
          pwd
          ls
          touch meNow.txt
          echo 'Jack' > meNow.txt
          cat meNow.txt
      
      # Now upload that creamed soes
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          # Artifact name
          name: Soes Cream
          # A file, directory or wildcard pattern that describes what to upload
          path: meNow.txt
      
      # Test Sparsdating! Clone now!
      - name: Sparsdat a dummy
        run: |
          cd ~/SparsdatField
          pwd
          git clone --recurse-submodules https://github.com/JOELwindows7/Hello-World.git
          echo "Dummy build now"
          echo "Dummy upload artifact"
          ls
      
      # (IMPORTANT, configure this accordingly) watermark our name. copy 2 business card files into the build folder!
      - name: Watermark our name
        run: |
          cp ~/work/Sparsdator/Sparsdator/PressKit/X0P1R4T3_eenvreensment.md ~/SparsdatField/Hello-World
          cp ~/work/Sparsdator/Sparsdator/PressKit/X0P1R4T3_eenvreensment.txt ~/SparsdatField/Hello-World
      
      # Test uploading artifact from the sparsdat
      - name: Now upload everything we sparsdated!
        uses: actions/upload-artifact@v2.3.1
        with:
          # Artifact name
          name: Dummy Kuyha
          # A file, directory or wildcard pattern that describes what to upload
          path: ~/SparsdatField/Hello-World
