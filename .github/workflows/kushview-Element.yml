name: Sparsdat kushview's Elements the comprehensive JUCE VST host
# https://github.com/kushview/Element
# Maintainer: Admiral Zumi, Lebuz Slappafali, JOELwindows7
# Reason: The Binary file is paywalled & is subscription. 
# Descriptions: see https://kushview.net/element/download/ then `Prebuilt Intaller`.
# You can see in https://kushview.net/element/download/form/ , the buy only grants you 1 version 
# & download link only lasts 14 days after buy. to always have latest version, you must subscribe to some sort of
# Patreon. This is indeed adobe level of soul sucking.
# Instruction sauce from https://github.com/kushview/Element/blob/master/docs/building.md

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  # Make every manufacturing belts runs this type of workflow every single month on day one
  schedule:
  - cron: "0 0 1 * *"

env:
  UPDATE: ~/work/Sparsdator/Sparsdator/ShellScripts/setup_and_update.sh
  JUCE_VERSION: "6.1.6"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # (IMPORTANT) Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # (IMPORTANT) Prepare SparsdatField Folder!
      - name: Prepare Manufacturing Tray
        run: |
          mkdir -p ~/SparsdatField
          pwd ~
          ls ~
      
      # (IMPORTANT) Update Everything & setup another stuffs matter
      - name: Update everything pls! Setup Essentials too!
        run: |
          ls
          pwd
          chmod +x ~/work/Sparsdator/Sparsdator/ShellScripts/setup_and_update.sh
          ~/work/Sparsdator/Sparsdator/ShellScripts/setup_and_update.sh
      
      # (IMPORTANT) But wait! Start the cache first! To improve subsequent rebuild time yess.
      - name: Cache Element da right now!
        id: cache-da-right-now
        uses: actions/cache@v2.1.7
        with:
          path: |
            ~/SparsdatField/Element
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      
      - name: Clone Kushview Element's source code if haven't already
        if: steps.cache-da-right-now.outputs.cache-hit != 'true'
        run: |
          cd ~/SparsdatField
          pwd
          git clone --recurse-submodules https://github.com/kushview/Element.git
          ls
      
      - name: Otherwise try update something
        if: steps.cache-da-right-now.outputs.cache-hit == 'true'
        run: |
          cd ~/SparsdatField/Element
          pwd
          ls
          git pull origin
      
      - name: Waf Script configure & build Element
        run: |
          cd ~/SparsdatField/Element
          ls
          pwd
          ./waf configure
          ./waf build

      # ah peck! where are the VST3 variants?!?!?!?!?
      - name: Okay, maybe we should download Projucer?
        run: |
          ls ~
          mkdir -p ~/Cranes
          echo "Downloading Projucer. Don't install from sudo apt install juce-tools! that's old!"
          mkdir -p ~/Downloads
          cd ~/Downloads
          wget https://api.juce.com/api/v1/download/juce/latest/linux
          echo "lol why the peck filenamed linux?"
          mv linux juce-$JUCE_VERSION-linux.zip
          echo "Installing Projucer"
          ls -lh
          pwd
          unzip ./juce-$JUCE_VERSION-linux.zip
          ls -lh
          pwd
          mv ./JUCE ~/Cranes/
          ls -R -lh ~/Cranes/JUCE
          echo "Okay fine, I guess we need that old JUCE anyways because it may happen to have VST2 SDK in it?"
          # sudo apt install juce-tools -y
          echo "It says that one is 5.2.1 according to comment on https://askubuntu.com/q/1279983/64076"
          echo "but the VST wrapper says you can use either that old SDK or JUCE 5.3.2 idk. This might still not work."
          echo "I hate you Steinberg! f888888 hell!! Noob gamer move!!!"
      
      # instruction here https://forum.juce.com/t/command-line-options/20343/2?u=joelwindows7
      - name: And then resave all 3 Projucer projects!
        run: |
          echo "Resave Element"
          cd ~/SparsdatField/Element/tools/jucer/Element
          ls
          pwd
          ~/Cranes/JUCE/Projucer --resave ./Element.jucer
          echo "Resave Element Effect"
          cd ~/SparsdatField/Element/tools/jucer/ElementFX
          ls
          pwd
          ~/Cranes/JUCE/Projucer --resave ./ElementFX.jucer
          echo "Resave Element MFX"
          cd ~/SparsdatField/Element/tools/jucer/ElementMFX
          ls
          pwd
          ~/Cranes/JUCE/Projucer --resave ./ElementMFX.jucer
          echo "Resave Element Standalone"
          cd ~/SparsdatField/Element/tools/jucer/Standalone
          ls
          pwd
          ~/Cranes/JUCE/Projucer --resave ./Element.jucer
      
      - name: list Build folder. what does this contains now?
        run: |
          cd ~/SparsdatField/Element/build
          pwd
          ls -R -lh
      
      - name: Watermark our name
        run: |
          cp ~/work/Sparsdator/Sparsdator/PressKit/X0P1R4T3_eenvreensment.md ~/SparsdatField/Element/build
          cp ~/work/Sparsdator/Sparsdator/PressKit/X0P1R4T3_eenvreensment.txt ~/SparsdatField/Element/build
      
      - name: Artifact element
        uses: actions/upload-artifact@v2.3.1
        with:
          # Artifact name
          name: KUSHVIEW-ELEMENT-DIRTY_REPACK-FULLVERSION-FREE-NO_VIRUS-NO_PASSWORD-GitHubAction
          # A file, directory or wildcard pattern that describes what to upload
          path: ~/SparsdatField/Element/build
    
      
